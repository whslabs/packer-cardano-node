apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: packer-cardano-node-pipelinerun
spec:
  params:
  - name: bazelisk-version
    value: 1.12.0
  pipelineSpec:
    params:
    - name: bazelisk-version
    tasks:
    - name: git-clone-packer
      params:
      - name: url
        value: https://github.com/whslabs/packer-cardano-node.git
      taskRef:
        name: git-clone
      workspaces:
      - name: output
        subpath: output-packer
        workspace: outputs
    - name: git-clone-boto3
      params:
      - name: url
        value: https://github.com/whslabs/boto3_delete_old_amis.git
      taskRef:
        name: git-clone
      workspaces:
      - name: output
        subpath: output-boto3
        workspace: outputs
    - name: build-packer
      runAfter: [git-clone-packer]
      taskSpec:
        steps:
        - name: build
          image: nix
          script: |
            #!/usr/bin/env sh
            cd $(workspaces.input.path)
            ./build.sh
        workspaces:
        - name: aws
          mountPath: /root/.aws/
        - name: input
      workspaces:
      - name: aws
        workspace: aws
      - name: input
        subpath: output-packer
        workspace: outputs
    - name: build-boto3
      params:
      - name: bazelisk-version
        value: $(params.bazelisk-version)
      runAfter:
      - build-packer
      - git-clone-boto3
      taskSpec:
        params:
        - name: bazelisk-version
        steps:
        - name: build
          image: python
          script: |
            #!/usr/bin/env sh
            set -x
            curl \
              -L \
              -O \
              https://github.com/bazelbuild/bazelisk/releases/download/v$(params.bazelisk-version)/bazelisk-linux-amd64
            install bazelisk-linux-amd64 /usr/local/bin/bazelisk
            cd $(workspaces.input.path)
            bazelisk run //:boto3_delete_old_amis_bin
        workspaces:
        - name: aws
          mountPath: /root/.aws/
        - name: input
      workspaces:
      - name: aws
        workspace: aws
      - name: input
        subpath: output-boto3
        workspace: outputs
    workspaces:
    - name: aws
    - name: outputs
  workspaces:
  - name: outputs
    volumeClaimTemplate:
      spec:
        resources:
          requests:
            storage: 1Gi
        accessModes:
        - ReadWriteOnce
  - name: aws
    secret:
      secretName: aws
